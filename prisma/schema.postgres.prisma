// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String   @id @default(uuid())
  sessionId     String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  currentStage  String   @default("initial")
  conversations Conversation[]
  strengths     Strength[]
  completed     Boolean  @default(false)
}

model Conversation {
  id        String   @id @default(uuid())
  sessionId String
  session   Session  @relation(fields: [sessionId], references: [sessionId])
  role      String   // "user" or "assistant"
  content   String
  timestamp DateTime @default(now())
  metadata  String?  // JSON string for additional analysis data
}

model Strength {
  id         String   @id @default(uuid())
  sessionId  String
  session    Session  @relation(fields: [sessionId], references: [sessionId])
  category   String   // "skill", "attitude", "value"
  name       String
  evidence   String
  confidence Float    // 0-1 신뢰도
  createdAt  DateTime @default(now())
}

/// Stores a user's categorized values for a given set (terminal/instrumental/work)
model ValueResult {
  id         String   @id @default(uuid())
  userId     String
  valueSet   String   // 'terminal' | 'instrumental' | 'work'
  layout     Json     // { very_important: string[], important: string[], somewhat_important: string[], not_important: string[] }
  top3       String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId, valueSet])
}

/// Authenticated user (Google OAuth)
model User {
  id        String   @id @default(uuid())
  googleId  String   @unique
  email     String?  @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
}
